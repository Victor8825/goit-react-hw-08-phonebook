{"version":3,"file":"static/js/706.d63cfbd1.chunk.js","mappings":"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","sources":["components/contacts/ContactListItem.js","redux/contacts/selectors.js","components/contacts/ContactList.js","components/contacts/ContactForm.js","components/contacts/Filter.js","pages/Contacts.js"],"sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n  IconButton,\n} from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { useTheme } from '@mui/material';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListItem key={id}>\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: theme.palette.secondary.main }} alt={name} />\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={number} />\n\n      <IconButton\n        sx={{ color: theme.palette.secondary.main }}\n        edge=\"end\"\n        aria-label=\"delete\"\n        onClick={handleDelete}\n      >\n        <Delete />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import React from 'react';\nimport { ContactListItem } from 'components/contacts/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List, Typography } from '@mui/material';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List bgcolor=\"info\" sx={{ maxWidth: '500px', bgColor: 'black', pl: 0 }}>\n      {visibleContacts.length ? (\n        visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id} name={name} number={number} id={id} />\n          );\n        })\n      ) : (\n        <Typography variant=\"h6\" color=\"secondary\" mt={4}>\n          There are no contacts, friend!\n        </Typography>\n      )}\n    </List>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { TextField, Box, Button } from '@mui/material';\nimport { useTheme } from '@mui/material';\n\nexport const ContactForm = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    if (contacts.find(({ name }) => name === form.name.value)) {\n      alert(`${form.name.value} is already in contacts`);\n      form.reset();\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.name.value,\n        number: form.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '500px',\n        gap: theme.spacing(4),\n      }}\n    >\n      <TextField\n        color=\"secondary\"\n        name=\"name\"\n        type=\"text\"\n        label=\"Name\"\n        autoComplete=\"off\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        color=\"secondary\"\n        name=\"number\"\n        autoComplete=\"off\"\n        type=\"number\"\n        label=\"Number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"submit\"\n        sx={{ maxWidth: '160px' }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/slice';\nimport { TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <Typography variant=\"h6\" color=\"secondary\" mt={6} mb={1}>\n        Find contacts by name\n      </Typography>\n      <TextField\n        color=\"secondary\"\n        type=\"text\"\n        name=\"filter\"\n        label=\"name\"\n        onChange={handleFilter}\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/contacts/ContactList';\nimport { ContactForm } from 'components/contacts/ContactForm';\nimport { Filter } from '../components/contacts/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Container, CircularProgress } from '@mui/material';\nimport { useTheme } from '@mui/material';\n\nconst Contacts = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container\n      sx={{\n        my: 5,\n        ml: 5,\n        mr: 'auto',\n        gap: theme.spacing(4),\n      }}\n    >\n      <ContactForm />\n      {isLoading && <CircularProgress />}\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactListItem","id","name","number","theme","useTheme","dispatch","useDispatch","ListItem","ListItemAvatar","Avatar","sx","bgcolor","palette","secondary","main","alt","ListItemText","primary","IconButton","color","edge","onClick","deleteContact","Delete","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","includes","ContactList","visibleContacts","useSelector","List","maxWidth","bgColor","pl","length","map","Typography","variant","mt","ContactForm","Box","component","onSubmit","event","preventDefault","form","target","find","value","alert","reset","addContact","autoComplete","display","flexDirection","gap","spacing","TextField","type","label","pattern","title","required","Button","Filter","mb","onChange","e","setFilter","useEffect","fetchContacts","Container","my","ml","mr","CircularProgress"],"sourceRoot":""}